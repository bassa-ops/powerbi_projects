/*1) Provide the list of markets in which customer "Atliq Exclusive" operates its
business in the APAC region.*/

select distinct market from gdb023.dim_customer where customer="Atliq Exclusive" and region='APAC';

/* 2. What is the percentage of unique product increase in 2021 vs. 2020? The
final output contains these fields,
unique_products_2020
unique_products_2021
percentage_chg */

select f1.unique_products as unique_products_2020, f2.unique_products as unique_products_2021,((f2.unique_products-f1.unique_products)/f1.unique_products)*100 as percentage_chg from(select count(distinct product_code) as unique_products, fiscal_year from fact_gross_price group by fiscal_year) as f1, (select count(distinct product_code) as unique_products, fiscal_year from fact_gross_price group by fiscal_year)as f2 where f1.fiscal_year<f2.fiscal_year;

/* 2 Provide a report with all the unique product counts for each segment and
sort them in descending order of product counts. The final output contains
2 fields,
segment
product_coun*/

select segment ,count(distinct product_code) as product_count from dim_product group by segment order by product_count desc;

/*4. Follow-up: Which segment had the most increase in unique products in
2021 vs 2020? The final output contains these fields,
segment
product_count_2020
product_count_2021
difference */

select s1.segment, s1.unique_prodcut as unique_prodcuts_2020, 
s2.unique_prodcut as unique_prodcuts_2021, 
s2.unique_prodcut - s1.unique_prodcut as difference
from
 (select d.segment, count(distinct d.product_code) as unique_prodcut, f.fiscal_year from dim_product d
 inner join fact_gross_price f on d.product_code=f.product_code group by d.segment, f.fiscal_year) s1,
 (select d.segment, count(distinct d.product_code) as unique_prodcut, f.fiscal_year from dim_product d
 inner join fact_gross_price f on d.product_code=f.product_code group by d.segment, f.fiscal_year)s2
where 
s1.fiscal_year<s2.fiscal_year and s1.segment=s2.segment
order by difference desc
limit 1;

/* 5 Get the products that have the highest and lowest manufacturing costs.
The final output should contain these fields,
product_code
product
manufacturing_cost*/

SELECT d.product_code, d.product, f.manufacturing_cost
FROM dim_product d
JOIN fact_manufacturing_cost f ON d.product_code = f.product_code
WHERE f.manufacturing_cost = (
    SELECT MAX(manufacturing_cost) as maxmimum FROM fact_manufacturing_cost
) || f.manufacturing_cost = (
    SELECT MIN(manufacturing_cost) as mimium FROM fact_manufacturing_cost
);


/*6. Generate a report which contains the top 5 customers who received an
average high pre_invoice_discount_pct for the fiscal year 2021 and in the
Indian market. The final output contains these fields,
customer_code
customer
average_discount_percentage*/


select d.customer_code,d.customer, round((avg(f.pre_invoice_discount_pct)*100),2)as average_discount_percentage  from dim_customer d inner join fact_pre_invoice_deductions f on d.customer_code=f.customer_code where f.fiscal_year=2021 and d.market='India' group by d.customer_code, d.customer order by  avg(f.pre_invoice_discount_pct) desc limit 5;



/*7. Get the complete report of the Gross sales amount for the customer “Atliq
Exclusive” for each month. This analysis helps to get an idea of low and
high-performing months and take strategic decisions.
The final report contains these columns:
Month
Year
Gross sales Amount*/

select monthname(date) as 'MonthDate', year(date) as 'YearDAte', sum(sold_quantity*gross_price) as 'Gross sales Amount' from fact_sales_monthly fs inner join fact_gross_price fg on fs.product_code=fg.product_code inner join dim_customer d on fs.customer_code=d.customer_code where d.customer="Atliq Exclusive"  group by MonthDate, YearDate;

/*8. In which quarter of 2020, got the maximum total_sold_quantity? The final
output contains these fields sorted by the total_sold_quantity,
Quarter
total_sold_quantit*/

select 
CASE
	WHEN substring(monthname(date),1,3) in ('Jan','Feb','Mar') THEN "Q1 of 2020"
	WHEN substring(monthname(date),1,3) in ('Apr','May','Jun') THEN "Q2 of 2020"
	WHEN substring(monthname(date),1,3) in ('Jul','Aug','Sep') THEN "Q3 of 2020"
	WHEN substring(monthname(date),1,3) in ('Oct','Nov','Dec') THEN "Q4 of 2020"
end as Quarter1, 
SUM(sold_quantity) as maxmimum_total from fact_sales_monthly where fiscal_year=2020 group by Quarter1 order by maxmimum_total desc limit 1;

/*9. Which channel helped to bring more gross sales in the fiscal year 2021
and the percentage of contribution? The final output contains these fields,
channel
gross_sales_mln
percentage*/

select d.channel as channel1, sum(fg.gross_price*fs.sold_quantity) as total_gross from fact_sales_monthly fs inner join fact_gross_price fg on fs.product_code=fg.product_code inner join dim_customer d on fs.customer_code=d.customer_code where fs.fiscal_year=2021 group by d.channel;


/*select @total :=0;
select @total := sum(fg.gross_price*fs.sold_quantity) from fact_sales_monthly fs inner join fact_gross_price fg on fs.product_code = fg.product_code where fs.fiscal_year=2021; */

select dc.channel,sum(fg.gross_price*fs.sold_quantity) as total_sales,(sum(fg.gross_price*fs.sold_quantity)/@total)*100 as per from dim_customer dc inner join fact_sales_monthly fs on dc.customer_code=fs.customer_code inner join fact_gross_price fg on fg.product_code=fs.product_code where fs.fiscal_year=2021 group by dc.channel order by per desc limit 1;

/*10. Get the Top 3 products in each division that have a high
total_sold_quantity in the fiscal_year 2021? The final output contains these
fields,
division
product_code
product
total_sold_quantity
rank_order*/


select * from(select t.division,t.product_code,t.product, t.total_sales, row_number () over (partition by t.division order by t.total_sales desc) as rankk from (select d.division,d.product_code,d.product,sum(sold_quantity) as total_sales from dim_product d inner join fact_sales_monthly fs on d.product_code=fs.product_code where fiscal_year=2021 group by d.division,d.product_code,d.product) t) t1 where rankk <=3;
